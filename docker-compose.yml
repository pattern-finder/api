version: "3.4"

networks:
  backend:
  frontend:

x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100m

services:
  picspy-api:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - backend
      - frontend
    env_file: 
      - .env
    environment: 
      MINIO_ACCESS_KEY: ${MINIO_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET}
      USESSL: ${USESSL}
    ports:
      - "${API_EXTERNAL_PORT}:${API_INTERNAL_PORT}"
    volumes:
      - ./src:/usr/src/app/src
    depends_on: 
      - picspy-mongo
    networks: 
      - backend
      - frontend

  picspy-front:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/usr/src/app/src
    networks:
      - frontend
    env_file: 
      - .env

  picspy-mongo:
    restart: always
    image: mongo:4.2.0
    volumes:
      - data:/data/db
    ports: 
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks: 
      - backend
      - frontend
    env_file: 
      - .env

  picspy-godbox:
    image: quantumsheep/godbox:2
    privileged: true
    ports:
      - 8081:8080
    environment: 
      API_MAX_PAYLOAD_SIZE: ${API_MAX_PAYLOAD_SIZE}
    networks: 
      - backend

  picspy-minio:
    image: minio/minio
    volumes:
    - picspy_minio:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET}
      MINIO_USESSL: ${USESSL}
    command: server /data
    ports:
      - 9001:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
    # restart: always
    networks: 
      - backend

  # Create buckets in minio server to welcome our files. Otherwise we'd have to do it manually and I'm too damn lazy for that.
  picspy-createbuckets:
    image: minio/mc
    depends_on:
      - picspy-minio
    ports:
      - 7999:9000
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://picspy-minio:9000 ${MINIO_KEY} ${MINIO_SECRET}; 
      /usr/bin/mc mb -p myminio/picspy-pps;
      /usr/bin/mc policy set download myminio/picspy-pps;
      /usr/bin/mc mb -p myminio/picspy-challenges;
      /usr/bin/mc policy set download myminio/picspy-challenges;
      exit 0;
      "
    networks: 
      - backend
    

volumes:
  postgres-data:
  redis-data:
  data:
  picspy_minio:
    