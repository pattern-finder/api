version: "3.4"

networks:
  backend:
  frontend:
  judgezero:

x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100m

services:
  picspy-api:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - backend
      - frontend
    env_file: 
      - .env
    ports:
      - "${API_EXTERNAL_PORT}:${API_INTERNAL_PORT}"
    volumes:
      - ./src:/usr/src/app/src
    depends_on: 
      - picspy-mongo
    networks: 
      - backend
      - frontend

  picspy-front:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/usr/src/app/src
    networks:
      - frontend
    env_file: 
      - .env

  picspy-mongo:
    restart: always
    image: mongo:4.2.0
    volumes:
      - data:/data/db
    ports: 
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks: 
      - backend
      - frontend
    env_file: 
      - .env

  judge-server:
    image: judge0/judge0:1.13.0
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    <<: *default-logging
    restart: always
    networks: 
      - judgezero
      - backend

  judge-workers:
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    <<: *default-logging
    restart: always
    networks: 
      - judgezero

  judge-db:
    image: postgres:13.0
    env_file: judge0.conf
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    <<: *default-logging
    restart: always
    networks: 
      - judgezero

  judge-redis:
    image: redis:6.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: judge0.conf
    volumes:
      - redis-data:/data
    <<: *default-logging
    restart: always
    networks: 
      - judgezero

  picspy-minio:
    image: minio/minio
    volumes:
    - picspy_minio:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET}
    command: server /data
    ports:
      - 127.0.0.1:9001:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    # restart: always
    networks: 
      - backend

  picspy-createbuckets:
      image: minio/mc
      depends_on:
        - picspy-minio
      ports:
        - 7999:9000
      entrypoint: >
        /bin/sh -c "
        /usr/bin/mc config host add myminio http://minio:9000 miniokey miniosecret;
        /usr/bin/mc mb -p myminio/picspy_pps;
        /usr/bin/mc policy download myminio/picspy_pps;
        /usr/bin/mc mb -p myminio/picspy_challenges;
        /usr/bin/mc policy download myminio/picspy_challenges;
        exit 0;
        "
      networks: 
        - backend
    

volumes:
  postgres-data:
  redis-data:
  data:
  picspy_minio:
    